(declare-fun heating (Int) Bool)
(declare-fun airConditioning (Int) Bool)
(declare-fun microwave (Int) Bool)
(declare-fun inRoom (Int) Bool)
(declare-fun noRule (Int) Bool)
(declare-fun noNumber () Int)
(declare-fun number () Int)
(declare-fun extTempInRoom (Int) Int)
(declare-fun tempInRoom (Int) Int)
(declare-fun tempSetpoint (Int) Int)
(declare-fun humiditySetpoint (Int) Int)
(declare-fun time (Int) Real)
(declare-fun coffee (Int) Bool)
(declare-fun projector (Int) Bool)
(declare-fun audio (Int) Bool)
(declare-fun exhaustFan (Int) Bool)
(declare-fun fumeHoods (Int) Bool)
(declare-fun printer (Int) Bool)
(declare-fun computer (Int) Bool)
(declare-fun deskLight (Int) Bool)
(declare-fun displayMonitors (Int) Bool)
(declare-fun demandeResponse (Int) Bool)
(declare-fun meetingEvent (Int) Bool)
(declare-fun light (Int) Bool)
(declare-fun sendComplain (Int) Bool)
(declare-fun hvac (Int) Bool)
(declare-fun openWindows (Int) Bool)
(declare-fun openCurtains (Int) Bool)
(declare-fun sunny (Int) Bool)
(declare-fun socket (Int) Bool)
(declare-fun rainy (Int) Bool)
(declare-fun cloudy (Int) Bool)
(declare-fun day (Int) Int)
(declare-fun today (Int) Int)
(declare-fun blind (Int) Int)
(assert (forall ((x Int)) (and (=> (sunny x) (not (rainy x))) (=> (rainy x) (not (sunny  x))))))
(assert (forall ((x Int)) (and ( <= (time x) 23 ) ( >= (time x) 0 ))))
(assert (forall ((x Int)) (and ( <= (day x) 366 ) ( >= (day x) 0 ))))
